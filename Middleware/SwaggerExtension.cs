using System;
using System.Reflection;
using System.IO;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.AspNetCore.Builder;
using Microsoft.OpenApi.Models;

namespace JokesAPI.Middleware
{
    public static class SwaggerExtension
    {
        public static void AddSwagger(this IServiceCollection services)
        {
            services.AddSwaggerGen(options =>
            {
                options.SwaggerDoc("v1", new OpenApiInfo
                {
                    Title = "Jokes API",
                    Version = "v1",
                    Description = "A simple example ASP.NET Core RESTful API application implementing a Jokes Database. " +
                    "The source code is found on my Github at [http://www.github.com/clintcarter1999/jokesAPI](http://www.github.com/clintcarter1999)",

                    Contact = new OpenApiContact
                    {
                        Name = "Clint Carter",
                        Email = "clintcarter1999@msn.com",
                        Url = new Uri("https://www.linkedin.com/in/clintcarter1999/"),
                    },
                     
                });

                //Locate the XML file being generated by ASP.NET for API Documentation...
                var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
                var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);

                //... and tell Swagger to use those XML comments
                options.IncludeXmlComments(xmlPath);
            });
        }
        public static void UseCustomSwagger(this IApplicationBuilder app)
        {
            app.UseSwagger();
            app.UseSwaggerUI(c =>
            {
                c.SwaggerEndpoint("/swagger/v1/swagger.json", "Jokes API V1");
            });
        }
    }
}
